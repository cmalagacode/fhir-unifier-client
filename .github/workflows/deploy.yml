name: deploy.yml
on:
  push:
    tags: v*
jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
      - name: Setup CMake
        uses: lukka/get-cmake@latest
      - name: Configure Release Build Script
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
      - name: Build Executable
        run: cmake --build build
      - name: Run Tests
        run: build\bin\tests
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-binary
          path: build\bin\
  build-linux:
    needs: build-windows
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
      - name: Setup CMake
        uses: lukka/get-cmake@latest
      - name: Configure Release Build Script
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
      - name: Build Executable
        run: cmake --build build
      - name: Run Tests
        run: ./build/bin/tests
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
         name: ${{ runner.os }}-binary
         path: build/bin/
  build-macos:
    needs: build-linux
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
      - name: Setup CMake
        uses: lukka/get-cmake@latest
      - name: Configure Release Build Script
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
      - name: Build Executable
        run: cmake --build build
      - name: Run Tests
        run: ./build/bin/tests
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-binary
          path: build/bin/
  release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v5
        with:
          path: release-assets
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            release-assets/windows-latest-binary/*
            release-assets/ubuntu-latest-binary/*
            release-assets/macos-latest-binary/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}